For code:

#include<linux/mm_types.h> //struct page
#include<linux/highmem.h>
#include<linux/module.h>

MODULE_LICENSE("GPL");

static   unsigned long free_dma_page_addr;
static   unsigned long free_user_page_addr;
static   struct page * free_highmem_page;

static   unsigned long dma_pages[6];
static   unsigned long user_pages[6];
static   struct page * highmem_pages[6];

static   struct page * highmem_page;
static   unsigned long highmem_page_address;

static   int order_dma;
static   int order_user;
static   int order_highmem;

static int __init my_pager_init( void ){
  
  order_dma  = 0;
  order_user = 0;
  order_highmem = 0;

  do{
    free_dma_page_addr = __get_free_pages( GFP_KERNEL | GFP_DMA, order_dma );
    if (! free_dma_page_addr ) break;
//we could do return -ENOMEM; 
//but we want to run the show further to user pages too.
    dma_pages[order_dma] = free_dma_page_addr;
    printk( KERN_ERR "Address for DMA page%c is : %lx. Order: %d.\n", 
            order_dma ? ' ' : 's', 
            free_dma_page_addr, 
            order_dma 
           );
  }while ( order_dma++ < 6 );

  do{
    free_user_page_addr = __get_free_pages( GFP_KERNEL | GFP_USER, order_user );
    if ( ! free_user_page_addr ) break;
    user_pages[order_user] = free_user_page_addr;
    printk( KERN_ERR "Address for user page%c is : %lx. Order: %d.\n", 
            order_user ? ' ' : 's', 
            free_user_page_addr,
            order_user
           );
  }while( order_user++ < 6 );
  
  highmem_page = alloc_pages( GFP_HIGHUSER, 3 );
  if ( ! highmem_page ) printk(KERN_ERR "Couldn't allocate highmem page with order : 3\n" );
  else {
    highmem_page_address = kmap( highmem_page );
    if ( ! highmem_page_address ) printk( KERN_ERR "Couldn't map highmem pages.\n");
    else {
      printk( KERN_ERR "Address for highuser pages is : %lx. Order: %d.\n", 
            highmem_page_address,
            3
           );
     }
  }
  

  return 0;
}

static void __exit my_pager_exit( void ){
  int local_order = 0;
  for( local_order = 0; local_order < order_dma; local_order++ )
    free_pages( dma_pages[local_order], local_order );
  for( local_order = 0; local_order < order_user; local_order++ )
    free_pages( user_pages[local_order], local_order );
  kunmap(highmem_page); //will unmap only ? can it free too? highly doubtful!
  __free_pages( highmem_page, 3 ); //will free the pages?

}

module_init( my_pager_init );
module_exit( my_pager_exit );

---------

output
-----------

[ 4065.974959] Address for DMA pages is : ffff880000098000. Order: 0.
[ 4065.974967] Address for DMA page  is : ffff880000090000. Order: 1.
[ 4065.974971] Address for DMA page  is : ffff880000094000. Order: 2.
[ 4065.974976] Address for DMA page  is : ffff880000080000. Order: 3.
[ 4065.974981] Address for DMA page  is : ffff880000010000. Order: 4.
[ 4065.974986] Address for DMA page  is : ffff880000020000. Order: 5.
[ 4065.974991] Address for DMA page  is : ffff880000040000. Order: 6.
[ 4065.974995] Address for user pages is : ffff88002c531000. Order: 0.
[ 4065.974999] Address for user page  is : ffff88002c576000. Order: 1.
[ 4065.975003] Address for user page  is : ffff88002c608000. Order: 2.
[ 4065.975007] Address for user page  is : ffff88002c5a0000. Order: 3.
[ 4065.975011] Address for user page  is : ffff88002c610000. Order: 4.
[ 4065.975016] Address for user page  is : ffff88002c620000. Order: 5.
[ 4065.975021] Address for user page  is : ffff88002c640000. Order: 6.
[ 4065.975025] Address for highuser pages is : ffff88002c5d0000. Order: 3.
[ 4109.529834] BUG: unable to handle kernel paging request at ffffeb880002c5dc
[ 4109.529845] IP: [<ffffffff8111e999>] __free_pages+0x9/0x40
[ 4109.529856] PGD 0 
[ 4109.529861] Oops: 0000 [#1] SMP 
[ 4109.529866] CPU 0 
[ 4109.529869] Modules linked in: prob4(O-) i915 drm_kms_helper drm i2c_algo_bit vmnet(O) ppdev parport_pc vsock(O) vmci(O) vmmon(O) dm_crypt joydev arc4 snd_hda_codec_realtek snd_hda_intel snd_hda_codec snd_hwdep rtl8187 mac80211 r852 sm_common nand nand_ids snd_pcm pcmcia lp sdhci_pci mtd nand_bch psmouse snd_seq_midi r592 sdhci bch memstick parport yenta_socket pcmcia_rsrc pcmcia_core asus_laptop snd_rawmidi nand_ecc cfg80211 sparse_keymap input_polldev serio_raw eeprom_93cx6 snd_seq_midi_event snd_seq snd_timer snd_seq_device snd soundcore snd_page_alloc dm_mirror dm_region_hash dm_log aufs 8139too 8139cp video
[ 4109.529943] 
[ 4109.529948] Pid: 5060, comm: rmmod Tainted: G           O 3.2.6 #4 TOSHIBA T20             /T20             
[ 4109.529956] RIP: 0010:[<ffffffff8111e999>]  [<ffffffff8111e999>] __free_pages+0x9/0x40
[ 4109.529963] RSP: 0018:ffff88002c5b5e78  EFLAGS: 00010216
[ 4109.529967] RAX: 000001880002c5c0 RBX: ffffea0000b17400 RCX: 0000000000000024
[ 4109.529970] RDX: 0000000000000000 RSI: 0000000000000006 RDI: ffffeb880002c5c0
[ 4109.529974] RBP: ffff88002c5b5e78 R08: 0000000000000000 R09: 0000000000000005
[ 4109.529978] R10: ffffea0000b18018 R11: 0000000000000000 R12: ffffffffa024f2f8
[ 4109.529981] R13: ffff88002c5b5f18 R14: 00007fffe3342480 R15: 0000000000000001
[ 4109.529986] FS:  00007f927f6d4700(0000) GS:ffff88005f400000(0000) knlGS:0000000000000000
[ 4109.529990] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
[ 4109.529993] CR2: ffffeb880002c5dc CR3: 000000002c537000 CR4: 00000000000006f0
[ 4109.529997] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[ 4109.530000] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
[ 4109.530005] Process rmmod (pid: 5060, threadinfo ffff88002c5b4000, task ffff88005b0416e0)
[ 4109.530008] Stack:
[ 4109.530010]  ffff88002c5b5ea8 ffffffff8111ea14 ffff88002c5b5e98 ffffffff00000006
[ 4109.530017]  ffff88002c5b5ec8 0000000000000007 ffff88002c5b5ec8 ffffffffa024d049
[ 4109.530024]  0000000000000880 ffffffffa024f000 ffff88002c5b5f78 ffffffff810a4cde
[ 4109.530031] Call Trace:
[ 4109.530037]  [<ffffffff8111ea14>] free_pages+0x44/0x50
[ 4109.530043]  [<ffffffffa024d049>] my_pager_exit+0x49/0x1000 [prob4]
[ 4109.530051]  [<ffffffff810a4cde>] sys_delete_module+0x19e/0x270
[ 4109.530059]  [<ffffffff81645102>] system_call_fastpath+0x16/0x1b
[ 4109.530062] Code: 04 25 d8 05 01 00 8b 4d b8 48 8b 55 c0 e9 fe fe ff ff 31 d2 48 89 de e8 06 c6 ff ff e9 6d ff ff ff 90 55 48 89 e5 66 66 66 66 90 <8b> 47 1c f0 ff 4f 1c 0f 94 c0 84 c0 74 09 85 f6 74 0d e8 60 d8 
[ 4109.530120] RIP  [<ffffffff8111e999>] __free_pages+0x9/0x40
[ 4109.530125]  RSP <ffff88002c5b5e78>
[ 4109.530127] CR2: ffffeb880002c5dc
[ 4109.530132] ---[ end trace 2dcb27dca5b2d882 ]---

